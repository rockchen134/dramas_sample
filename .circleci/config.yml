# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    macos:
      xcode: 13.2.1 # Specify the Xcode version to use
    
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      FL_OUTPUT_DIR: output

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
       # Preboot iOS Simulator
      - macos/preboot-simulator: 
          device: iPhone 12
          version: "15.2"
      - run: pod install # Install CocoaPods dependencies
      - run: fastlane scan # Run tests using Fastlane

      # - checkout
      #  - run: pod install # Install CocoaPods dependencies
      # - run: fastlane scan # Run tests using Fastlane

      # Collect XML test results data to show in the UI, and save the same XML
      # files under test-results folder in the Artifacts tab
      - store_test_results:
          path: test_output
      - store_artifacts:
          path: test_output
          destination: scan-output
  
  deliver-to-testflight:
    macos:
      xcode: "13.2.1"

    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8

    working_directory: /Users/distiller/project

    shell: /bin/bash --login -o pipefail

    # Define the steps required to build the project.
    steps:

      # Cannot use cache due to this issue: https://discuss.circleci.com/t/builds-using-git-tags-failing/14904/6

      # Get the code from the VCS provider.      
      - run:
          name: Git checkout
          command: git clone --depth 1 --single-branch ${CIRCLE_REPOSITORY_URL} -b ${CIRCLE_TAG} .
      
      # Configure Bundler
      - run:
          name: Configure Bundler
          command: tail -1 Gemfile.lock | awk '{print $1}' | xargs gem install --user-install bundler -v

      # Install Bundler
      - run:
          name: Install Bundler
          command: bundle install --path $HOME/.bundle

      # Deploy!
      - run:
          name: Deploy to iTC
          command: bundle exec fastlane deliver_to_testflight
          no_output_timeout: 20m

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2.1
  build-and-testflight:
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - master
